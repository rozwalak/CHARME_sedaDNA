devtools::install_github("HOPE-UIB-BIO/R-Ratepol-package")
library(RRatepol)
library(tidyverse)
example_data <-
RRatepol::example_data
View(example_data)
dplyr::glimpse(example_data)
View(example_data[[6]][[1]])
View(example_data[[6]][[1]])
example_data$age_uncertainty
example_data$age_uncertainty[[1]]
sequence_02 <-
RRatepol::fc_estimate_RoC(
data_source_community = example_data$pollen_data[[1]],
data_source_age = example_data$sample_age[[1]],
age_uncertainty = example_data$age_uncertainty[[1]],
smooth_method = "shep",
DC = "chisq",
Working_Units = "levels",
standardise = TRUE,
N_individuals = 150,
rand = 1000,
use_parallel = TRUE)
RRatepol::fc_plot_RoC_sequence(
data_source = sequence_02)
example_data$pollen_data[[1]]
example_data$sample_age[[1]]
example_data$age_uncertainty[[1]]
example_data$sample_age[[1]]
sequence_02 <-
RRatepol::fc_estimate_RoC(
data_source_community = example_data$pollen_data[[1]],
data_source_age = example_data$sample_age[[1]],
smooth_method = "shep",
DC = "chisq",
Working_Units = "levels",
standardise = TRUE,
N_individuals = 150,
rand = 1000,
use_parallel = TRUE)
RRatepol::fc_plot_RoC_sequence(
data_source = sequence_02)
sequence_03 <-
RRatepol::fc_estimate_RoC(
data_source_community = example_data$pollen_data[[1]],
data_source_age = example_data$sample_age[[1]],
smooth_method = "shep",
DC = "bray",
Working_Units = "MW",
bin_size = 500,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = 1000,
use_parallel = TRUE)
RRatepol::fc_plot_RoC_sequence(
data_source = sequence_03)
RRatepol::fc_plot_RoC_sequence(
data_source = sequence_03)
example_data$pollen_data[[1]]
biomarkers <- read.csv("m2_biomarkers.csv")
View(biomarkers)
biomarkers
age <- read.csv("age_depth.csv")
View(age)
View(biomarkers)
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = biomarkers,
data_source_age = age,
smooth_method = "shep",
DC = "chisq",
Working_Units = "MW",
bin_size = 500,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
randomisations <- 100
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = biomarkers,
data_source_age = age,
smooth_method = "shep",
DC = "chisq",
Working_Units = "MW",
bin_size = 500,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
example_data$sample_age[[1]]
age$age <- as.numeric(age$age)
age <- read.csv("age_depth.csv")
View(age)
randomisations <- 100
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = biomarkers,
data_source_age = age,
smooth_method = "shep",
DC = "chisq",
Working_Units = "MW",
bin_size = 500,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
df_biomarkers <- read.csv("m2_biomarkers.csv")
df_age <- read.csv("age_depth.csv")
df_age$age <- as.numeric(df_age$age)
df_biomarkers <- read.csv("m2_biomarkers.csv")
df_age <- read.csv("age_depth.csv")
randomisations <- 100
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = df_biomarkers,
data_source_age = df_age,
smooth_method = "shep",
DC = "chisq",
Working_Units = "MW",
bin_size = 500,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
View(df_age)
df_age <- read.csv("age_depth.csv")
typeof(df_age)
typeof(df_age)
typeof(df_age$age)
typeof(df_age$age)
randomisations <- 100
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = df_biomarkers,
data_source_age = df_age,
smooth_method = "shep",
DC = "chisq",
Working_Units = "MW",
bin_size = 500,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
df_age$age <- as.numeric(df_age$age)
typeof(df_age$age)
randomisations <- 100
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = df_biomarkers,
data_source_age = df_age,
smooth_method = "shep",
DC = "chisq",
Working_Units = "MW",
bin_size = 500,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = df_biomarkers,
data_source_age = df_age,
smooth_method = "shep",
DC = "chisq",
Working_Units = "MW",
bin_size = 10,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
biomarkers <- read.csv("m2_biomarkers.csv")
biomarkers <- read.csv("m2-biomarkers.csv")
View(biomarkers)
age <- read.csv("age_depth.csv")
typeof(df_age$age)
randomisations <- 100
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = df_biomarkers,
data_source_age = df_age,
smooth_method = "shep",
DC = "chisq",
Working_Units = "MW",
bin_size = 10,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = biomarkers,
data_source_age = age,
smooth_method = "shep",
DC = "chisq",
Working_Units = "MW",
bin_size = 10,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
age$age <- as.numeric(age$age)
randomisations <- 100
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = biomarkers,
data_source_age = age,
smooth_method = "shep",
DC = "chisq",
Working_Units = "MW",
bin_size = 10,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
gl_roc_peaks <-
RRatepol::fc_detect_peak_points(
data_source = gl_roc,
sel_method = "trend_non_linear")
RRatepol::fc_plot_RoC_sequence(
data_source = gl_roc)
age <- read.csv("age_depth.csv")
age$age <- as.numeric(age$age)
randomisations <- 100
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = biomarkers,
data_source_age = age,
smooth_method = "shep",
DC = "chisq",
Working_Units = "MW",
bin_size = 10,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
RRatepol::fc_plot_RoC_sequence(
data_source = gl_roc)
RRatepol::fc_plot_RoC_sequence(
data_source = gl_roc)
RRatepol::fc_plot_RoC_sequence(
data_source = gl_roc,
age_threshold = 100)
RRatepol::fc_plot_RoC_sequence(
data_source = gl_roc,
age_threshold = 1950)
gl_roc
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = biomarkers,
data_source_age = age,
smooth_method = "shep",
DC = "chisq",
Working_Units = "MW",
bin_size = 5,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 150,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
RRatepol::fc_plot_RoC_sequence(
data_source = gl_roc,
age_threshold = 200)
RRatepol::fc_plot_RoC_sequence(
data_source = gl_roc)
gl_roc
View(gl_roc)
p <- ggplot(gl_roc, aes(x=ROC, y=Age)) +
geom_line() +
xlab("")
p
p <- ggplot(gl_roc, aes(x=Age, y=ROC)) +
geom_line() +
xlab("")
p
p2 <- ggplot(data, aes(x=Age, y=ROC)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
theme_ipsum()
p2 <- ggplot(gl_roc, aes(x=Age, y=ROC)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
theme_ipsum()
p2 <- ggplot(gl_roc, aes(x=Age, y=ROC)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE)
p2
smooth.spline(gl_roc$Age, gl_roc$ROC, spar=0.35)
smoothingSpline = smooth.spline(gl_roc$Age, gl_roc$ROC, spar=0.35)
lines(smoothingSpline)
smoothingSpline = smooth.spline(gl_roc$Age, gl_roc$ROC, spar=0.1)
lines(smoothingSpline)
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = biomarkers,
data_source_age = age,
smooth_method = "shep",
DC = "euc",
Working_Units = "MW",
bin_size = 5,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 18,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
rand = randomisations,
gl_roc <-
RRatepol::fc_estimate_RoC(
data_source_community = biomarkers,
data_source_age = age,
smooth_method = "shep",
DC = "euc",
Working_Units = "MW",
bin_size = 5,
Number_of_shifts  = 5,
standardise = TRUE,
N_individuals = 18,
rand = randomisations,
use_parallel = TRUE # use_parallel = TRUE to use parallel calculation
)
gl_roc
